name: build and release

on:
  push:
    branches: [ main ]

jobs:
  build-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github

      - name: Install xmllint tool
        shell: bash
        continue-on-error: true
        run: |
          sudo apt-get clean
          sudo apt-get install -f
          sudo dpkg --configure -a
          sudo apt-get update
          sudo apt-get install libxml2-utils

      - name: Extract release version from pom.xml
        id: extractVersion
        run: |
          serviceVersion=$(xmllint --xpath '/*[local-name()="project"]/*[local-name()="version"]/text()' pom.xml | sed "s/-SNAPSHOT//")
          echo "serviceVersion=$serviceVersion"
          echo "serviceVersion=$serviceVersion" >> $GITHUB_OUTPUT

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn -B package --file pom.xml
        env:
          GITHUB_ACTOR: ${{ env.GITHUB_ACTOR }}
          GITHUB_TOKEN: ${{ secrets.PACKAGE }}

      - name: Create GitHub Release
        id: createRelease
        run: |
          VERSION="${{ steps.extractVersion.outputs.serviceVersion }}"
          RESPONSE=$(curl -X POST -H "Authorization: token ${{ secrets.PACKAGE }}" \
            -d '{
              "tag_name": "v'$VERSION'",
              "name": "Release '$VERSION'",
              "body": "Release notes for version '$VERSION'",
              "draft": false,
              "prerelease": false
            }' https://api.github.com/repos/vinhdat4999/${{ github.event.repository.name }}/releases)

          echo "Release response: $RESPONSE"
          RELEASE_ID=$(echo $RESPONSE | jq -r .id)
          echo "Release ID: $RELEASE_ID"
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV

      - name: Upload JAR to GitHub Release
        run: |
          VERSION="${{ steps.extractVersion.outputs.serviceVersion }}"
          curl -X POST -H "Authorization: token ${{ secrets.PACKAGE }}" \
            -H "Content-Type: application/octet-stream" \
            --data-binary @target/${{ github.event.repository.name }}-${{ steps.extractVersion.outputs.serviceVersion }}-SNAPSHOT.jar \
            "https://uploads.github.com/repos/vinhdat4999/${{ github.event.repository.name }}/releases/${{ env.RELEASE_ID }}/assets?name=${{ github.event.repository.name }}-${{ steps.extractVersion.outputs.serviceVersion }}.jar"
